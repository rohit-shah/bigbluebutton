<?xml version="1.0" encoding="utf-8"?>
<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2012 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				xmlns:mate="http://mate.asfusion.com/"
				minWidth="700" height="350" 
				initialize="init()" 
				styleName="presentationFileUploadWindowStyle"
				showCloseButton="false">
	
	<mate:Listener type="{MadePresenterEvent.SWITCH_TO_PRESENTER_MODE}" method="handleBecomePresenter" />
	<mate:Listener type="{MadePresenterEvent.SWITCH_TO_VIEWER_MODE}" method="handleBecomeViewer" />
	
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import mx.managers.PopUpManager;
			
			import org.bigbluebutton.core.UsersUtil;
			import org.bigbluebutton.core.managers.UserManager;
			import org.bigbluebutton.main.events.MadePresenterEvent;
			import org.bigbluebutton.main.model.users.Conference;
			import org.bigbluebutton.modules.phone.PhoneOptions;
			import org.bigbluebutton.modules.phone.events.AudioSelectionWindowEvent;
			import org.bigbluebutton.modules.phone.events.JoinVoiceConferenceCommand;
			import org.bigbluebutton.util.i18n.ResourceUtil;
			
			private var phoneOptions:PhoneOptions = new PhoneOptions;
			
			[Bindable] private var baseIndex:int = 1;
			
			private function init():void {
				var conference:Conference = UserManager.getInstance().getConference();
				
				if (!phoneOptions.listenOnlyMode) btnListenOnly.enabled = false;
				if (
					(phoneOptions.presenterShareOnly && !UsersUtil.amIPresenter() && !UsersUtil.amIModerator())
				) {
					btnMicrophone.enabled = false;
				}
				
				if (phoneOptions.showPhoneOption) {
					txtPhone.text=ResourceUtil.getInstance().getString('bbb.audioSelection.txtPhone.text', [conference.dialNumber, conference.voiceBridge]);
				} else {
					vrulePhone.visible = vrulePhone.includeInLayout = false;
					vboxPhone.visible = vboxPhone.includeInLayout = false;
					this.minWidth = 450;
					this.height = 325;
					vboxMic.percentWidth = 50;
					vboxListen.percentWidth = 50;
				}
			}
			
			private function onMicClick():void {
				trace("AudioSelectionWindow - Share Microphone Clicked");
				var dispatcher:Dispatcher = new Dispatcher();
				var command:JoinVoiceConferenceCommand = new JoinVoiceConferenceCommand();
				command.mic = true;
				dispatcher.dispatchEvent(command);
				
				PopUpManager.removePopUp(this);
			}
			
			private function onListenClick():void {
				trace("AudioSelectionWindow - Share Microphone Clicked");
				var dispatcher:Dispatcher = new Dispatcher();
				var command:JoinVoiceConferenceCommand = new JoinVoiceConferenceCommand();
				command.mic = false;
				dispatcher.dispatchEvent(command);
				
				PopUpManager.removePopUp(this);
			}
			
			private function onCancelClicked():void {
				trace("AudioSelectionWindow - Cancel clicked");
				var dispatcher:Dispatcher = new Dispatcher();
				dispatcher.dispatchEvent(new AudioSelectionWindowEvent(AudioSelectionWindowEvent.CLOSED_AUDIO_SELECTION));
				
				PopUpManager.removePopUp(this);
			}
			
			private function handleBecomePresenter(e:MadePresenterEvent):void {
				if (phoneOptions.presenterShareOnly) btnMicrophone.enabled = true;
			}
			
			private function handleBecomeViewer(e:MadePresenterEvent):void {
				if (phoneOptions.presenterShareOnly && !UsersUtil.amIModerator()) btnMicrophone.enabled = false;
			}
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%"  paddingLeft="20" paddingRight="20" paddingTop="20" paddingBottom="20" horizontalAlign="right">
		<mx:TextArea borderSkin="{null}" verticalScrollPolicy="off" 
					 editable="false" tabIndex="{baseIndex}"
					 text="{ResourceUtil.getInstance().getString('bbb.audioSelection.title')}"
					 styleName="presentationUploadTitleStyle"
					 width="100%" textAlign="center"/>
		<mx:HBox width="100%" height="100%">
			<mx:VBox id="vboxMic" height="100%" width="30%" horizontalAlign="center">
				<mx:Image source="@Embed('assets/microphone80.png')" />
				<mx:Button id="btnMicrophone" tabIndex="{baseIndex+1}" click="onMicClick()"
						   styleName="lightBlueButtonStyle" fillColors="{[0x579fd7,0x42aefc,0x32a5fd,0x229cfd]}"
						   label="{ResourceUtil.getInstance().getString('bbb.audioSelection.btnMicrophone.label')}"
						   accessibilityName="{ResourceUtil.getInstance().getString('bbb.audioSelection.btnMicrophone.toolTip')}"/>
			</mx:VBox>
			<mx:VBox id="vboxListen" height="100%" width="30%" horizontalAlign="center">
				<mx:Image source="@Embed('assets/speaker80.png')" />
				<mx:Button id="btnListenOnly" tabIndex="{baseIndex+2}" click="onListenClick()"
						   styleName="lightBlueButtonStyle" fillColors="{[0x579fd7,0x42aefc,0x32a5fd,0x229cfd]}"
						   label="{ResourceUtil.getInstance().getString('bbb.audioSelection.btnListenOnly.label')}"
						   accessibilityName="{ResourceUtil.getInstance().getString('bbb.audioSelection.btnListenOnly.toolTip')}" />
			</mx:VBox>
			<mx:VRule id="vrulePhone" height="100%" width="5%" />
			<mx:VBox id="vboxPhone" height="100%" width="30%" horizontalAlign="center">
				<mx:Image source="@Embed('assets/phone80.png')" />
				<mx:Text id="txtPhone" width="100%" />
			</mx:VBox>
		</mx:HBox>
		<mx:Button id="cancelBtn" label="{ResourceUtil.getInstance().getString('bbb.window.closeBtn.toolTip')}" accessibilityName="{ResourceUtil.getInstance().getString('bbb.micSettings.cancel.toolTip')}"
				   styleName="whiteButtonStyle"  fillColors="{[0xFFFFFF,0xFEFEFE,0xFDFDFD,0xFCFCFC]}"
				   tabIndex="{baseIndex+3}" click="onCancelClicked()" />
	</mx:VBox>
</mx:TitleWindow>